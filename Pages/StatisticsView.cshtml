@page
@model StatisticsModel
@{
    ViewData["Title"] = "Statistics";
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="css/statistics.css" />
</head>
<body>
    <main>
        <h1>Statistics</h1>
        <div>
            <a class="nav-link text-dark" asp-area="" asp-page="/AlbumsView">
                <button class="animated-btn" style="position: absolute; top: 100px; right: 50px;">Albums</button>
            </a>

            <section class="stats-cubes">
                <div class="stats-cube">
                    <h3>Total Albums</h3>
                    <p>@Model.NumberOfAlbums</p>
                </div>
                <div class="stats-cube">
                    <h3>Total Artists</h3>
                    <p>@Model.NumberOfArtists</p>
                </div>
                <div class="stats-cube">
                    <h3>Total Songs</h3>
                    <p>@Model.NumberOfSongs</p>
                </div>
                <div class="stats-cube">
                    <h3>Total Genres</h3>
                    <p>@Model.NumberOfGenres</p>
                </div>
            </section>

            <section class="graph-container">
                <div>
                    <canvas id="barChart"></canvas>
                </div>
                <div>
                    <canvas id="lineChart"></canvas>
                </div>
                <div class="full-width">
                    <canvas id="pieChart"></canvas>
                </div>
            </section>
        </div>
    </main>
        <script src="js/statistics.js"></script>
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const barChartCtx = document.getElementById('barChart').getContext('2d');
    new Chart(barChartCtx, {
        type: 'bar',
        data: {
            labels: ['Albums', 'Artists', 'Songs', 'Genres'],
            datasets: [{
                label: 'Totals',
                data: [@Model.NumberOfAlbums, @Model.NumberOfArtists, @Model.NumberOfSongs, @Model.NumberOfGenres],
                backgroundColor: ['#6a0dad', '#8a2be2', '#9370db', '#d8bfd8'],
                borderColor: '#4b0082',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    const lineChartCtx = document.getElementById('lineChart').getContext('2d');
    new Chart(lineChartCtx, {
        type: 'line',
        data: {
            labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
            datasets: [{
                label: 'New Albums',
                data: [3, 5, 2, 8],
                borderColor: '#6a0dad',
                backgroundColor: '#d8bfd8',
                fill: false
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    const pieChartCtx = document.getElementById('pieChart').getContext('2d');
    new Chart(pieChartCtx, {
        type: 'pie',
        data: {
            labels: ['Albums', 'Artists', 'Songs', 'Genres'],
            datasets: [{
                label: 'Totals',
                data: [@Model.NumberOfAlbums, @Model.NumberOfArtists, @Model.NumberOfSongs, @Model.NumberOfGenres],
                backgroundColor: ['#6a0dad', '#8a2be2', '#9370db', '#d8bfd8']
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>
