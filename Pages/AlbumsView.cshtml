@page
@model RazorMusic.Pages.AlbumsViewModel
@using Models
@using System
@{
}

<style>
.track-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.track-input {
    flex: 1;
    margin-right: 10px;
    min-width: 0; 
}

.delete-track-button {
    flex-shrink: 0;
}

.album-input {
    using System.Reflection.Metadata;
    margin-bottom: 10px;
}

.image-container {
    width: 100%;
    padding-top: 100%; /* 1:1 Aspect Ratio */
    position: relative;
    margin-bottom: 10px;
}

.image-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

</style>

<div class="container">
    <h1>Your Albums</h1>
    <br />
    <div class="row">
        @foreach (var album in Model.Albums)
        {
            <div class="col-md-4">
                <div class="card mb-4 shadow-sm rounded" onclick="toggleDetails('details-@album.Id')" style="cursor: pointer;">
                    <div class="card-body">
                        <div class="image-container">
                            <img src="data:image/jpeg;base64,@album.GetCoverImageBase64()" class="card-img-top" alt="@album.AlbumName" />
                        </div>
                        <strong><h4 class="card-title">@album.AlbumName</h4></strong>
                        <p class="card-text" style="color: gray; margin-top: -10px;">by @album.Artist</p>
                    </div>
                    <div id="details-@album.Id" class="card-body" style="display: none;">
                        <p class="card-text">Release Date: @album.ReleaseDate</p>
                        <p class="card-text">Type: @album.AlbumType</p>
                        <p class="card-text">Description: @album.Description</p>
                        <p class="card-text">Tracks:</p>
                        <ul>
                            @foreach (var track in album.Tracks)
                            {
                                <li>@track</li>
                            }
                        </ul>
                        <button class="btn btn-danger" onclick="event.stopPropagation(); showDeleteModal('@album.Id')">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                        <button type="button" class="btn btn-primary" onclick="event.stopPropagation(); showEditModal('@album.Id')">
                            <i class="fas fa-edit"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <button type="button" class="btn btn-primary" style="position: fixed; bottom: 100px; right: 50px;" onclick="event.stopPropagation(); showCreateModal()">
        Add Album
    </button>
</div>

<!-- Delete Album Modal -->
<div class="modal" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this album?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelDeleteButton">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Create Album Modal -->
<div class="modal" id="createModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width: auto;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalTitle">Create Album</h5>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data" id="createAlbumForm">
                    <div class="form-group">
                        
                        <div class="album-input">
                            <label for="albumName">Album Name</label>
                            <input type="text" class="form-control" id="albumName" name="albumName" required />
                        </div>
                        <div class="album-input">
                            <label for="albumReleaseDate">Release Date</label>
                            <input type="date" class="form-control" id="albumReleaseDate" name="albumReleaseDate" />
                        </div>

                        <div class="album-input">
                            <label for="albumArtist">Artist</label>
                            <input type="text" class="form-control" id="albumArtist" name="albumArtist" />
                        </div>

                        <div class="album-input">
                            <label for="albumType">Type</label>
                            <select class="form-control" id="albumType" name="albumType" >
                                <option value="Single">Single</option>
                                <option value="EP">EP</option>
                                <option value="LP">LP</option>
                            </select>
                        </div>

                        <div class="album-input">
                            <label for="albumDescription">Description</label>
                            <textarea class="form-control" id="albumDescription" name="albumDescription" ></textarea>
                        </div>

                        <div class="album-input">
                            <label for="albumTracks">Tracks</label>
                            <div id="tracksContainer">

                            </div>
                            <button type="button" class="btn btn-secondary" id="addTrackButton" onclick="addNewTrackInput()">Add Track</button>
                        </div>

                        <div class="album-input">
                            <label for="albumCoverImage">Cover Image</label>
                            <input type="file" class="form-control" id="albumCoverImage" name="albumCoverImage" accept="image/png, image/jpeg"  onchange="displayImage(this)" />
                            <small id="fileSizeLimit" class="form-text text-muted">Maximum file size: 4mb</small>
                        </div>

                        <img id="coverImagePreview" src="#" alt="Cover Image" style="display: none; width: 100%; height: auto;" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelCreateButton">Cancel</button>
                <button type="submit" class="btn btn-primary" id="confirmCreateButton">Create</button>
            </div>
        </div>
    </div>
</div>


<script>
    function toggleDetails(id) {
        var element = document.getElementById(id);
        if (element.style.display === "none") {
            element.style.display = "block";
        } else {
            element.style.display = "none";
        }
    }

    function displayImage(input) {
        img = document.getElementById('coverImagePreview');
        img.src = '#';
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                var img = document.getElementById('coverImagePreview');
                img.src = e.target.result;
                img.style.display = 'block';
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function showDeleteModal(albumId) {
        var modal = document.getElementById('deleteModal');
        var confirmButton = document.getElementById('confirmDeleteButton');
        var cancelButton = document.getElementById('cancelDeleteButton');
        confirmButton.onclick = function() {
            deleteAlbum(albumId);
        };
        cancelButton.onclick = function() {
            $(modal).modal('hide');
        };

        $(modal).modal('show');
    }

    function showCreateModal() {
        var modal = document.getElementById('createModal');
        var confirmButton = document.getElementById('confirmCreateButton');
        var cancelButton = document.getElementById('cancelCreateButton');
        var inputFields = modal.querySelectorAll('input, textarea'); 
        var tracksContainer = document.getElementById('tracksContainer'); 

        clearCreateModal(inputFields, tracksContainer);

        confirmButton.addEventListener('click', function(event) {
            event.preventDefault();
            createAlbum();
        });
        cancelButton.onclick = function() {
            $(modal).modal('hide');
        };

        $(modal).modal('show');
    }

    function showEditModal(albumId) {
        var modal = document.getElementById('createModal');
        var modalTitle = document.getElementById('createModalTitle');
        var confirmButton = document.getElementById('confirmCreateButton');
        var cancelButton = document.getElementById('cancelCreateButton');
        var inputFields = modal.querySelectorAll('input, textarea'); 
        var albumTypeSelect = modal.querySelector('select#albumType');
        var tracksContainer = document.getElementById('tracksContainer');
        var img = document.getElementById('coverImagePreview');

        clearCreateModal(inputFields, tracksContainer); 
        var album = getAlbum(albumId);
        

        confirmButton.onclick = function() {
            editAlbum(albumId);
        };
        cancelButton.onclick = function() {
            $(modal).modal('hide');
        };

        modalTitle.innerHTML = 'Edit Album';
        confirmButton.innerHTML = 'Save';

        img.src = `data:image/png;base64,${album.coverImage}`; 
        img.style.display = 'block';

        inputFields.forEach(function(input) {
            switch (input.id) {
                case 'albumName':
                    input.value = album.albumName;
                    break;
                case 'albumReleaseDate':
                    var releaseDate = new Date(album.releaseDate);
                    var formattedDate = releaseDate.getFullYear() + '-' + 
                                        ('0' + (releaseDate.getMonth() + 1)).slice(-2) + '-' + 
                                        ('0' + releaseDate.getDate()).slice(-2);
                    input.value = formattedDate;
                    break;
                case 'albumArtist':
                    input.value = album.artist;
                    break;
                case 'albumDescription':
                    input.value = album.description;
                    break;
            }
        });

        Array.from(albumTypeSelect.options).forEach(function(option) {
            if (option.value === album.albumType) {
                option.selected = true;
            }
        });

        album.tracks.forEach(function(track) {
            addNewTrackInput(track);
        });


        $(modal).modal('show');
    }

    function clearCreateModal(inputFields, tracksContainer) {
        inputFields.forEach(function(input) {
            input.value = '';
        });

        while (tracksContainer.firstChild) {
            tracksContainer.removeChild(tracksContainer.firstChild);
        }
    }

    function deleteAlbum(albumId) {
        fetch(`?handler=DeleteAlbum&albumId=${albumId}`).then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('Failed to delete album.');
            }
        });
    }

    function getAlbum(albumId) {
        $.ajax({
            url: '/AlbumsView?handler=GetAlbum',
            type: 'GET',
            data: { albumId: albumId },
            async: false,
            success: function(response) {
                if (response.success) {
                    album = response.album;
                } else {
                    console.error('Failed to retrieve album');
                }
            },
            error: function() {
                console.error('Error in AJAX request');
            }
        });

        return album;
    }

    function createAlbum() {
        var albumName = document.getElementById('albumName').value;
        var albumReleaseDate = document.getElementById('albumReleaseDate').value;
        var albumArtist = document.getElementById('albumArtist').value;
        var albumType = document.getElementById('albumType').value;
        var albumDescription = document.getElementById('albumDescription').value;
        var albumTracks = Array.from(document.getElementsByName('albumTracks[]')).map(input => input.value);
        var albumCoverImage = document.getElementById('albumCoverImage').files[0];
        var tracksParam = albumTracks.map(track => `tracks=${encodeURIComponent(track)}`).join('&');

        if (albumCoverImage && albumCoverImage.size > 4 * 1024 * 1024) { // 4 MB in bytes
            alert('File size exceeds 4 MB.');
            return;
        }

        fetch('?handler=ClearInputAlbum');

        var formData = new FormData();
        formData.append('InputAlbum.AlbumName', albumName);
        formData.append('InputAlbum.ReleaseDate', albumReleaseDate);
        formData.append('InputAlbum.Artist', albumArtist);
        formData.append('InputAlbum.AlbumType', albumType);
        formData.append('InputAlbum.Description', albumDescription);
        formData.append('InputAlbum.CoverImage', albumCoverImage);
        albumTracks.forEach((track, index) => {
            formData.append(`InputAlbum.Tracks[${index}]`, track);
        });

        fetch('?handler=AddAlbum', {
            method: 'POST',
            headers: {
                "XSRF-TOKEN": document.querySelector("[name='__RequestVerificationToken']").value
            },
            body: formData
        }).then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('Failed to create album.');
            }
        });
    }

    function editAlbum(albumId) {
        var albumName = document.getElementById('albumName').value;
        var albumReleaseDate = document.getElementById('albumReleaseDate').value;
        var albumArtist = document.getElementById('albumArtist').value;
        var albumType = document.getElementById('albumType').value;
        var albumDescription = document.getElementById('albumDescription').value;
        var albumCoverImage = document.getElementById('albumCoverImage').files[0];
        var albumTracks = Array.from(document.getElementsByName('albumTracks[]')).map(input => input.value);
        var tracksParam = albumTracks.map(track => `tracks=${encodeURIComponent(track)}`).join('&');

        fetch('?handler=ClearInputAlbum');

        var formData = new FormData();
        formData.append('InputAlbum.AlbumId', albumId);
        formData.append('InputAlbum.AlbumName', albumName);
        formData.append('InputAlbum.ReleaseDate', albumReleaseDate);
        formData.append('InputAlbum.Artist', albumArtist);
        formData.append('InputAlbum.AlbumType', albumType);
        formData.append('InputAlbum.Description', albumDescription);
        formData.append('InputAlbum.CoverImage', albumCoverImage);
        albumTracks.forEach((track, index) => {
            formData.append(`InputAlbum.Tracks[${index}]`, track);
        });

        
        if (albumCoverImage && albumCoverImage.size > 4 * 1024 * 1024) { // 4 MB in bytes
            alert('File size exceeds 4 MB.');
            return;
        }


        fetch('?handler=EditAlbum', {
            method: 'POST',
            body: formData
        }).then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('Failed to edit album.');
            }
        });
    }

    function addNewTrackInput(trackName = '') {
        var newTrackInput = document.createElement('div');
        newTrackInput.className = 'track-item'; 

        var inputField = document.createElement('input');
        inputField.type = 'text';
        inputField.name = 'albumTracks[]';
        inputField.className = 'form-control track-input';
        inputField.placeholder = 'Track Name';
        inputField.value = trackName;
        newTrackInput.appendChild(inputField);

        var deleteButton = document.createElement('button');
        deleteButton.innerHTML = 'Delete';
        deleteButton.className = 'btn btn-danger btn-sm delete-track-button'; 
        deleteButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
        deleteButton.onclick = function() {
            newTrackInput.remove();
        };
        newTrackInput.appendChild(deleteButton);

        document.getElementById('tracksContainer').appendChild(newTrackInput);
    }
</script>